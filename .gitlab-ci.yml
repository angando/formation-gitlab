stages:
    - validate
    - deploy_to_env_dev
    - validate_dev_environment
    - deploy_to_prod
    - verify_deploy_to_prod

.validate_playbooks:
    stage: validate
    image: kecorbin/ansible:devel
    tags: 
        - devel
    script:
        - ansible-playbook --syntax-check  -i host_dev.yml configure_osfp_R1.yml configure_osfp_R2.yml


.deploy_to_dev:
    stage: deploy_to_env_dev
    image: kecorbin/ansible:devel
    tags: 
        - devel
    script:
        - echo "Deploy to dev env"
        - ansible-playbook  -i host_dev.yml configure_osfp_R1.yml
        - ansible-playbook  -i host_dev.yml configure_osfp_R2.yml

    environment: 
        name: DEV_TEST
    only:
        - master

.validate_dev_environment:
    stage: validate_dev_environment
    image: ciscotestautomation/pyats:latest-robot
    tags: 
        - pyats
  
    script:
        - export ANSIBLE_HOST_KEY_CHECKING=False
        - python3 -m pip install ansible
        - ansible-galaxy install -r requirements.yml -p "${ANSIBLE_ROLES_PATH:-roles}"
        - ansible-playbook --syntax-check  -i host_dev.yml validate_ospf.yml save_logs_ospf.yml
        - ansible-playbook -i host_dev.yml validate_ospf.yml
        - ansible-playbook -i host_dev.yml  save_logs_ospf.yml 
        - ls logs/
        
    environment: 
        name: DEV_TEST
    only:
        - master      

    artifacts:
        name: "pyats_logs_${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}"
        when: always
        paths:
            - ./logs/c3725-R1_ospf.json
            - ./logs/c3725-R2_ospf.json

deploy_to_prod:
    image: kecorbin/ansible:devel
    stage: deploy_to_prod
    tags: 
        - devel
    script:
        - echo "Deploy to prod env"
        - ansible-playbook --syntax-check  -i hosts_prod.yml configure_osfp_R1.yml configure_osfp_R2.yml
        - ansible-playbook -i hosts_prod.yml configure_osfp_R1.yml configure_osfp_R2.yml

    environment:
        name: production
    only:
        - production
    when: manual
    allow_failure: false
    only:
    - production

validate_prod_environment:    
    image: ciscotestautomation/pyats:latest-robot
    stage: verify_deploy_to_prod
    tags:
        - pyats
    dependencies:
        - deploy_to_prod
    only:
        - production

    script:
        - export ANSIBLE_HOST_KEY_CHECKING=False
        - python3 -m pip install ansible
        - ansible-galaxy install -r requirements.yml -p "${ANSIBLE_ROLES_PATH:-roles}"
        - ansible-playbook --syntax-check  -i hosts_prod.yml validate_ospf.yml save_logs_ospf.yml
        - ansible-playbook -i hosts_prod.yml validate_ospf.yml
        - ansible-playbook -i hosts_prod.yml  save_logs_ospf.yml 
        - ls logs/

    artifacts:
        name: "pyats_logs_${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}"
        when: always
        paths:
            - ./logs/c3725-R1_ospf.json
            - ./logs/c3725-R2_ospf.json


